{"ast":null,"code":"var _jsxFileName = \"/home/kanghyew0n/\\uBC14\\uD0D5\\uD654\\uBA74/core/react-crud-project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport \"./App.css\"; //import dummy from \"./resource/dummyData\";\n\nimport ContentList from \"./pages/ContentList\";\nimport Create from \"./pages/Create\";\nimport Read from \"./pages/Read\";\nimport Update from \"./pages/Update\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [contents, setContents] = useState([]); // 추가 데이터 불러오기\n  // const url = \"http://localhost:3001/discussions\";\n  // const fetchData = fetch(url).then((res) => res.json());\n\n  useEffect(() => {\n    getContents();\n  }, []);\n\n  const getContents = () => {\n    return fetch(\"http://localhost:3001/discussions\").then(res => res.json()).then(data => {\n      setContents(data);\n    });\n  };\n\n  const [clickCreate, setClickCreate] = useState(true); // 글쓰기 버튼이 클릭 되었는가?\n\n  const [clickTitle, setClickTitle] = useState(false); // 타이틀이 클릭 되었는가?\n\n  const [clickUpdate, setClickUpdate] = useState(false); // 수정  버튼이 클릭 되었는가?\n\n  const [updateData, setUpdateData] = useState(\"\");\n  const [selectData, setSelectData] = useState(\"\"); // 선택된 타이틀에 해당하는 data 담기\n  // 글쓰기 버튼 클릭 여부에 따라 create 창 띄우기\n\n  const onCreateBtn = () => {\n    setClickCreate(true);\n    setClickTitle(false);\n    setUpdateData(false);\n  }; // 제목 클릭 -> 해당 content 만 가져오기\n\n\n  const handleFilter = (username, clickIdx) => {\n    setClickCreate(false);\n    const clickTitle = contents.filter((content, idx) => idx === clickIdx);\n    alert(`${username} 님의 글입니다.`);\n    setSelectData(clickTitle);\n    setClickTitle(true);\n    setClickCreate(false);\n    setClickUpdate(false);\n    console.log(clickTitle);\n  }; // 삭제 -> 삭제하고 다시 create 불러오기\n\n\n  const handleDelete = (username, deleteIdx) => {\n    const deletes = contents.filter((content, idx) => idx !== deleteIdx);\n    alert(`${username} 님이 작성한 글을 삭제합니다`);\n    setContents(deletes); // 삭제하지 않는 항목들\n\n    setClickTitle(false);\n    setClickCreate(true);\n  }; // 수정 -> update에 기본값 불러서 가져오고 -> 다시 update하기 ?\n\n\n  const handleUpdate = (username, updateIdx) => {// const updates = contents.filter((content, idx) => idx === updateIdx);\n    // alert(`${username} 님이 작성한 글을 수정합니다.`);\n    // setContents((contents) =>\n    //   contents.map((content) =>\n    //     content.id === updateIdx ? { updates, ...content } : content\n    //   )\n    // );\n    // setUpdateData(updates);\n    // setClickUpdate(true);\n    // setClickTitle(false);\n    // setClickCreate(false);\n    // 다른 창 닫아주기\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React-CRUD-Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"component\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uBAA9\\uB85D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"contentList__btn\",\n            onClick: onCreateBtn,\n            children: \"\\uAE00\\uC4F0\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), contents.map((content, idx) => {\n          return /*#__PURE__*/_jsxDEV(ContentList, {\n            content: content,\n            handleFilter: handleFilter,\n            idx: idx\n          }, content.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), clickCreate ? /*#__PURE__*/_jsxDEV(Create, {\n        contents: contents,\n        setContents: setContents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), clickTitle ? selectData.map((content, idx) => {\n        return /*#__PURE__*/_jsxDEV(Read, {\n          content: content,\n          handleDelete: handleDelete,\n          handleUpdate: handleUpdate,\n          idx: idx\n        }, content.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), clickUpdate ? /*#__PURE__*/_jsxDEV(Update, {\n        updateData: updateData,\n        clickUpdate: clickUpdate,\n        contents: contents,\n        handleUpdate: handleUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"n+fhfBeEbfkNFP1G1E82gH2T1Sg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ContentList","Create","Read","Update","App","contents","setContents","getContents","fetch","then","res","json","data","clickCreate","setClickCreate","clickTitle","setClickTitle","clickUpdate","setClickUpdate","updateData","setUpdateData","selectData","setSelectData","onCreateBtn","handleFilter","username","clickIdx","filter","content","idx","alert","console","log","handleDelete","deleteIdx","deletes","handleUpdate","updateIdx","map","id"],"sources":["/home/kanghyew0n/바탕화면/core/react-crud-project/src/App.js"],"sourcesContent":["import { React, useEffect, useState } from \"react\";\nimport \"./App.css\";\n\n//import dummy from \"./resource/dummyData\";\nimport ContentList from \"./pages/ContentList\";\nimport Create from \"./pages/Create\";\nimport Read from \"./pages/Read\";\nimport Update from \"./pages/Update\";\n\nconst App = () => {\n  const [contents, setContents] = useState([]); // 추가 데이터 불러오기\n  // const url = \"http://localhost:3001/discussions\";\n  // const fetchData = fetch(url).then((res) => res.json());\n\n  useEffect(() => {\n    getContents();\n  }, []);\n\n  const getContents = () => {\n    return fetch(\"http://localhost:3001/discussions\")\n      .then((res) => res.json())\n      .then((data) => {\n        setContents(data);\n      });\n  };\n\n  const [clickCreate, setClickCreate] = useState(true); // 글쓰기 버튼이 클릭 되었는가?\n  const [clickTitle, setClickTitle] = useState(false); // 타이틀이 클릭 되었는가?\n  const [clickUpdate, setClickUpdate] = useState(false); // 수정  버튼이 클릭 되었는가?\n  const [updateData, setUpdateData] = useState(\"\");\n\n  const [selectData, setSelectData] = useState(\"\"); // 선택된 타이틀에 해당하는 data 담기\n\n  // 글쓰기 버튼 클릭 여부에 따라 create 창 띄우기\n  const onCreateBtn = () => {\n    setClickCreate(true);\n    setClickTitle(false);\n    setUpdateData(false);\n  };\n\n  // 제목 클릭 -> 해당 content 만 가져오기\n  const handleFilter = (username, clickIdx) => {\n    setClickCreate(false);\n    const clickTitle = contents.filter((content, idx) => idx === clickIdx);\n    alert(`${username} 님의 글입니다.`);\n    setSelectData(clickTitle);\n    setClickTitle(true);\n    setClickCreate(false);\n    setClickUpdate(false);\n\n    console.log(clickTitle);\n  };\n\n  // 삭제 -> 삭제하고 다시 create 불러오기\n  const handleDelete = (username, deleteIdx) => {\n    const deletes = contents.filter((content, idx) => idx !== deleteIdx);\n    alert(`${username} 님이 작성한 글을 삭제합니다`);\n    setContents(deletes); // 삭제하지 않는 항목들\n    setClickTitle(false);\n    setClickCreate(true);\n  };\n\n  // 수정 -> update에 기본값 불러서 가져오고 -> 다시 update하기 ?\n  const handleUpdate = (username, updateIdx) => {\n    // const updates = contents.filter((content, idx) => idx === updateIdx);\n    // alert(`${username} 님이 작성한 글을 수정합니다.`);\n    // setContents((contents) =>\n    //   contents.map((content) =>\n    //     content.id === updateIdx ? { updates, ...content } : content\n    //   )\n    // );\n    // setUpdateData(updates);\n    // setClickUpdate(true);\n    // setClickTitle(false);\n    // setClickCreate(false);\n    // 다른 창 닫아주기\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>React-CRUD-Project</h1>\n      <div className=\"component\">\n        <div className=\"list\">\n          <header>\n            <div></div>\n            <h2>목록</h2>\n            <button className=\"contentList__btn\" onClick={onCreateBtn}>\n              글쓰기\n            </button>\n          </header>\n          {contents.map((content, idx) => {\n            return (\n              <ContentList\n                content={content}\n                key={content.id}\n                handleFilter={handleFilter}\n                idx={idx}\n              />\n            );\n          })}\n        </div>\n\n        {clickCreate ? (\n          <Create contents={contents} setContents={setContents} />\n        ) : (\n          <div></div>\n        )}\n        {clickTitle ? (\n          selectData.map((content, idx) => {\n            return (\n              <Read\n                content={content}\n                key={content.id}\n                handleDelete={handleDelete}\n                handleUpdate={handleUpdate}\n                idx={idx}\n              />\n            );\n          })\n        ) : (\n          <div></div>\n        )}\n\n        {clickUpdate ? (\n          <Update\n            updateData={updateData}\n            clickUpdate={clickUpdate}\n            contents={contents}\n            handleUpdate={handleUpdate}\n          />\n        ) : (\n          <div></div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}