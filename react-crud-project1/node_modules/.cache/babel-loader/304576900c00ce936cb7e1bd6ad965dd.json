{"ast":null,"code":"var _jsxFileName = \"/home/kanghyew0n/\\uBC14\\uD0D5\\uD654\\uBA74/core/react-crud-project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport dummy from \"./resource/dummyData\";\nimport ContentList from \"./pages/ContentList\";\nimport Create from \"./pages/Create\";\nimport View from \"./pages/View\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  const [contents, setContents] = useState(dummy); // 담긴 데이터 불러오기\n\n  const [clickCreate, setClickCreate] = useState(true); // 글쓰기 버튼이 클릭 되었는가?\n\n  const [clickTitle, setClickTitle] = useState(false); // 타이틀이 클릭 되었는가?\n\n  const [clickUpdate, setClickUpdate] = useState(false); // 수정  버튼이 클릭 되었는가?\n\n  const [updateData, setUpdateData] = useState(\"\"); // 글쓰기 버튼 클릭 여부에 따라 create 창 띄우기\n\n  const onCreateBtn = () => {\n    setClickCreate(prev => !prev);\n    setClickTitle(false);\n  };\n\n  const onTitleBtn = () => {\n    setClickTitle(prev => !prev);\n    setClickTitle(false);\n  };\n\n  const onChangeSelectedContent = event => {\n    setClickTitle(true);\n  };\n\n  const handleDelete = (username, deleteIdx) => {\n    const deletes = contents.filter((content, idx) => idx !== deleteIdx);\n    alert(`${username} 님이 작성한 글을 삭제합니다`);\n    setContents(deletes);\n  };\n\n  const handleUpdate = (username, updateIdx) => {\n    const updates = contents.filter((content, idx) => idx === updateIdx);\n    alert(`${username} 님이 작성한 글을 수정합니다.`);\n    setClickUpdate(true);\n    setUpdateData(updates);\n    setClickTitle(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React-CRUD-Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"component\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uBAA9\\uB85D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"contentList__btn\",\n            onClick: onCreateBtn,\n            children: \"\\uAE00\\uC4F0\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), contents.map(content => {\n          return /*#__PURE__*/_jsxDEV(ContentList, {\n            content: content,\n            onTitleBtn: onTitleBtn\n          }, content.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), clickCreate ? /*#__PURE__*/_jsxDEV(Create, {\n        contents: contents,\n        setContents: setContents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), clickTitle ? contents.map((content, idx) => {\n        return /*#__PURE__*/_jsxDEV(View, {\n          content: content,\n          handleDelete: handleDelete,\n          handleUpdate: handleUpdate,\n          idx: idx\n        }, content.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), clickUpdate ? /*#__PURE__*/_jsxDEV(Create, {\n        updateData: updateData,\n        clickUpdate: clickUpdate,\n        contents: contents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"vbb1PHVTU5DYAHoEiNTT9yPeV6w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","dummy","ContentList","Create","View","App","props","contents","setContents","clickCreate","setClickCreate","clickTitle","setClickTitle","clickUpdate","setClickUpdate","updateData","setUpdateData","onCreateBtn","prev","onTitleBtn","onChangeSelectedContent","event","handleDelete","username","deleteIdx","deletes","filter","content","idx","alert","handleUpdate","updateIdx","updates","map","id"],"sources":["/home/kanghyew0n/바탕화면/core/react-crud-project/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport dummy from \"./resource/dummyData\";\n\nimport ContentList from \"./pages/ContentList\";\nimport Create from \"./pages/Create\";\nimport View from \"./pages/View\";\n\nconst App = (props) => {\n  const [contents, setContents] = useState(dummy); // 담긴 데이터 불러오기\n  const [clickCreate, setClickCreate] = useState(true); // 글쓰기 버튼이 클릭 되었는가?\n  const [clickTitle, setClickTitle] = useState(false); // 타이틀이 클릭 되었는가?\n  const [clickUpdate, setClickUpdate] = useState(false); // 수정  버튼이 클릭 되었는가?\n  const [updateData, setUpdateData] = useState(\"\");\n\n  // 글쓰기 버튼 클릭 여부에 따라 create 창 띄우기\n  const onCreateBtn = () => {\n    setClickCreate((prev) => !prev);\n    setClickTitle(false);\n  };\n\n  const onTitleBtn = () => {\n    setClickTitle((prev) => !prev);\n    setClickTitle(false);\n  };\n\n  const onChangeSelectedContent = (event) => {\n    setClickTitle(true);\n  };\n\n  const handleDelete = (username, deleteIdx) => {\n    const deletes = contents.filter((content, idx) => idx !== deleteIdx);\n    alert(`${username} 님이 작성한 글을 삭제합니다`);\n    setContents(deletes);\n  };\n\n  const handleUpdate = (username, updateIdx) => {\n    const updates = contents.filter((content, idx) => idx === updateIdx);\n    alert(`${username} 님이 작성한 글을 수정합니다.`);\n    setClickUpdate(true);\n    setUpdateData(updates);\n    setClickTitle(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>React-CRUD-Project</h1>\n      <div className=\"component\">\n        <div className=\"list\">\n          <header>\n            <div></div>\n            <h2>목록</h2>\n            <button className=\"contentList__btn\" onClick={onCreateBtn}>\n              글쓰기\n            </button>\n          </header>\n          {contents.map((content) => {\n            return (\n              <ContentList\n                content={content}\n                key={content.id}\n                onTitleBtn={onTitleBtn}\n              />\n            );\n          })}\n        </div>\n\n        {clickCreate ? (\n          <Create contents={contents} setContents={setContents} />\n        ) : (\n          <div></div>\n        )}\n        {clickTitle ? (\n          contents.map((content, idx) => {\n            return (\n              <View\n                content={content}\n                key={content.id}\n                handleDelete={handleDelete}\n                handleUpdate={handleUpdate}\n                idx={idx}\n              />\n            );\n          })\n        ) : (\n          <div></div>\n        )}\n\n        {clickUpdate ? (\n          <Create\n            updateData={updateData}\n            clickUpdate={clickUpdate}\n            contents={contents}\n          />\n        ) : (\n          <div></div>\n        )}\n\n        {/* {clickCreate ? (\n          <Create contents={contents} setContents={setContents} />\n        ) : (\n          <div></div>\n        )}\n\n        {isFiltered ? (\n          contents.map((content, idx) => {\n            return (\n              <View\n                content={content}\n                key={content.id}\n                selectedContent={selectedContent}\n                handleDelete={handleDelete}\n                idx={idx}\n              />\n            );\n          })\n        ) : (\n          <div></div>\n        )} */}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}